<?xml version='1.0' encoding='UTF-8'?>
<workflow>
  <meta name="jira.description" />
  <meta name="jira.update.author.key">atlassian</meta>
  <meta name="jira.updated.date">1522165095308</meta>
  <initial-actions>
    <action id="1" name="Create">
      <meta name="jira.i18n.submit">common.forms.create</meta>
      <meta name="jira.i18n.title">common.forms.create</meta>
      <validators>
        <validator name="" type="class">
          <arg name="permission">Create Issue</arg>
          <arg name="class.name">com.atlassian.jira.workflow.validator.PermissionValidator</arg>
        </validator>
      </validators>
      <results>
        <unconditional-result old-status="žée" status="¢—§" step="4">
          <post-functions>
            <function type="class">
              <arg name="field.name">ж╕ио+r</arg>
              <arg name="full.module.key">com.atlassian.jira.plugin.system.workflowupdate-issue-field-function</arg>
              <arg name="field.value">4</arg>
              <arg name="class.name">com.atlassian.jira.workflow.function.issue.UpdateIssueFieldFunction</arg>
            </function>
            <function type="class">
              <arg name="class.name">com.atlassian.jira.workflow.function.issue.IssueCreateFunction</arg>
            </function>
            <function type="class">
              <arg name="class.name">com.atlassian.jira.workflow.function.issue.IssueReindexFunction</arg>
            </function>
            <function type="class">
              <arg name="FIELD_NOTES">Update "Front Office User" copied from assignee</arg>
              <arg name="full.module.key">com.onresolve.jira.groovy.groovyrunnerrungroovy-function</arg>
              <arg name="FIELD_INLINE_SCRIPT">import com.atlassian.crowd.embedded.api.User
import com.atlassian.jira.bc.issue.search.SearchService
import com.atlassian.jira.component.ComponentAccessor
import com.atlassian.jira.issue.Issue
import com.atlassian.jira.issue.IssueManager
import com.atlassian.jira.user.util.UserUtil
import com.atlassian.jira.web.bean.PagerFilter
import com.atlassian.jira.ComponentManager
import com.atlassian.jira.issue.CustomFieldManager
import com.atlassian.jira.issue.fields.OrderableField
import com.atlassian.jira.issue.fields.CustomField
import com.atlassian.jira.issue.ModifiedValue
import com.atlassian.jira.issue.util.IssueChangeHolder
import com.atlassian.jira.issue.util.DefaultIssueChangeHolder
import com.atlassian.jira.event.type.EventDispatchOption
import com.atlassian.jira.issue.index.IssueIndexingService
import com.atlassian.jira.user.ApplicationUser
import com.atlassian.jira.issue.MutableIssue
import com.atlassian.jira.user.util.UserManager

import org.apache.log4j.Category

Category log = Category.getInstance("com.onresolve.jira.groovy.PostFunction")

log.setLevel(org.apache.log4j.Level.DEBUG)

//###### Determinazione progetto ######
String PrjKey = issue.getProjectObject().key
SearchService 		searchService 		= ComponentAccessor.getComponent(SearchService.class)
UserUtil 			userUtil 			= ComponentAccessor.getUserUtil()
IssueManager 		issueManager 		= ComponentAccessor.getIssueManager()
CustomFieldManager 	customFieldManager 	= ComponentAccessor.getCustomFieldManager()
IssueChangeHolder 	changeHolder 		= new DefaultIssueChangeHolder()
IssueIndexingService issueIndexingService = ComponentAccessor.getComponent(IssueIndexingService)
ApplicationUser user = ComponentAccessor.jiraAuthenticationContext.loggedInUser

CustomField frontOfficeUser = customFieldManager.getCustomFieldObject(Long.parseLong("18800"))

ApplicationUser newuser = ComponentAccessor.getUserManager().getUserByKey(issue.assignee.key.toString())
frontOfficeUser.updateValue(null, issue, new ModifiedValue(issue.getCustomFieldValue(frontOfficeUser),newuser),changeHolder)

issueManager.updateIssue(user, issue, EventDispatchOption.DO_NOT_DISPATCH, false)

issueIndexingService.reIndex(issue)
</arg>
              <arg name="canned-script">com.onresolve.scriptrunner.canned.jira.workflow.postfunctions.CustomScriptFunction</arg>
              <arg name="class.name">com.onresolve.jira.groovy.GroovyFunctionPlugin</arg>
              <arg name="FIELD_SCRIPT_FILE" />
            </function>
            <function type="class">
              <arg name="FIELD_NOTES">Update Epic Name - Set it equals to Issue Key</arg>
              <arg name="full.module.key">com.onresolve.jira.groovy.groovyrunnerrungroovy-function</arg>
              <arg name="FIELD_INLINE_SCRIPT">import com.atlassian.crowd.embedded.api.User
import com.atlassian.jira.bc.issue.search.SearchService
import com.atlassian.jira.component.ComponentAccessor
import com.atlassian.jira.issue.Issue
import com.atlassian.jira.issue.IssueManager
import com.atlassian.jira.user.util.UserUtil
import com.atlassian.jira.web.bean.PagerFilter
import com.atlassian.jira.ComponentManager
import com.atlassian.jira.issue.CustomFieldManager
import com.atlassian.jira.issue.fields.OrderableField
import com.atlassian.jira.issue.fields.CustomField
import com.atlassian.jira.issue.ModifiedValue
import com.atlassian.jira.issue.util.IssueChangeHolder
import com.atlassian.jira.issue.util.DefaultIssueChangeHolder
import com.atlassian.jira.event.type.EventDispatchOption
import com.atlassian.jira.issue.index.IssueIndexingService
import com.atlassian.jira.user.ApplicationUser
import com.atlassian.jira.issue.MutableIssue
import com.atlassian.jira.user.util.UserManager

import org.apache.log4j.Category

Category log = Category.getInstance("com.onresolve.jira.groovy.PostFunction")

log.setLevel(org.apache.log4j.Level.DEBUG)

//###### Determinazione progetto ######
String PrjKey = issue.getProjectObject().key
SearchService 		searchService 		= ComponentAccessor.getComponent(SearchService.class)
UserUtil 			userUtil 			= ComponentAccessor.getUserUtil()
IssueManager 		issueManager 		= ComponentAccessor.getIssueManager()
CustomFieldManager 	customFieldManager 	= ComponentAccessor.getCustomFieldManager()
IssueChangeHolder 	changeHolder 		= new DefaultIssueChangeHolder()
IssueIndexingService issueIndexingService = ComponentAccessor.getComponent(IssueIndexingService)
ApplicationUser user = ComponentAccessor.jiraAuthenticationContext.loggedInUser

CustomField EpicName = customFieldManager.getCustomFieldObject(Long.parseLong("10004"))

if(issue.getIssueType().name.equals("Epic")){
    EpicName.updateValue(null, issue, new ModifiedValue(issue.getCustomFieldValue(EpicName),issue.key),changeHolder)
}

issueManager.updateIssue(user, issue, EventDispatchOption.DO_NOT_DISPATCH, false)

issueIndexingService.reIndex(issue)
</arg>
              <arg name="canned-script">com.onresolve.scriptrunner.canned.jira.workflow.postfunctions.CustomScriptFunction</arg>
              <arg name="class.name">com.onresolve.jira.groovy.GroovyFunctionPlugin</arg>
              <arg name="FIELD_SCRIPT_FILE" />
            </function>
            <function type="class">
              <arg name="eventTypeId">1</arg>
              <arg name="class.name">com.atlassian.jira.workflow.function.event.FireIssueEventFunction</arg>
            </function>
          </post-functions>
        </unconditional-result>
      </results>
    </action>
  </initial-actions>
  <common-actions>
    <action id="161" name="Send to II° Level (Sales)">
      <meta name="jira.description" />
      <meta name="jira.fieldscreen.id" />
      <results>
        <unconditional-result old-status="žée" status="žée" step="6">
          <post-functions>
            <function type="class">
              <arg name="field.name">jË"w</arg>
              <arg name="full.module.key">com.atlassian.jira.plugin.system.workflowupdate-issue-field-function</arg>
              <arg name="field.value" />
              <arg name="class.name">com.atlassian.jira.workflow.function.issue.UpdateIssueFieldFunction</arg>
            </function>
            <function type="class">
              <arg name="class.name">com.atlassian.jira.workflow.function.issue.UpdateIssueStatusFunction</arg>
            </function>
            <function type="class">
              <arg name="class.name">com.atlassian.jira.workflow.function.misc.CreateCommentFunction</arg>
            </function>
            <function type="class">
              <arg name="class.name">com.atlassian.jira.workflow.function.issue.GenerateChangeHistoryFunction</arg>
            </function>
            <function type="class">
              <arg name="class.name">com.atlassian.jira.workflow.function.issue.IssueReindexFunction</arg>
            </function>
            <function type="class">
              <arg name="eventTypeId">13</arg>
              <arg name="class.name">com.atlassian.jira.workflow.function.event.FireIssueEventFunction</arg>
            </function>
          </post-functions>
        </unconditional-result>
      </results>
    </action>
    <action id="131" name="Resolve">
      <meta name="jira.description" />
      <meta name="jira.fieldscreen.id" />
      <restrict-to>
        <conditions type="OR">
          <condition type="class">
            <arg name="class.name">com.atlassian.jira.workflow.condition.AllowOnlyAssignee</arg>
          </condition>
          <condition type="class">
            <arg name="jira.projectrole.id">10002</arg>
            <arg name="class.name">com.atlassian.jira.workflow.condition.InProjectRoleCondition</arg>
          </condition>
        </conditions>
      </restrict-to>
      <results>
        <unconditional-result old-status="žée" status="žée" step="13">
          <post-functions>
            <function type="class">
              <arg name="field.name">resolution</arg>
              <arg name="full.module.key">com.atlassian.jira.plugin.system.workflowupdate-issue-field-function</arg>
              <arg name="field.value">6</arg>
              <arg name="class.name">com.atlassian.jira.workflow.function.issue.UpdateIssueFieldFunction</arg>
            </function>
            <function type="class">
              <arg name="class.name">com.atlassian.jira.workflow.function.issue.UpdateIssueStatusFunction</arg>
            </function>
            <function type="class">
              <arg name="class.name">com.atlassian.jira.workflow.function.misc.CreateCommentFunction</arg>
            </function>
            <function type="class">
              <arg name="class.name">com.atlassian.jira.workflow.function.issue.GenerateChangeHistoryFunction</arg>
            </function>
            <function type="class">
              <arg name="class.name">com.atlassian.jira.workflow.function.issue.IssueReindexFunction</arg>
            </function>
            <function type="class">
              <arg name="eventTypeId">13</arg>
              <arg name="class.name">com.atlassian.jira.workflow.function.event.FireIssueEventFunction</arg>
            </function>
          </post-functions>
        </unconditional-result>
      </results>
    </action>
    <action id="151" name="Close">
      <meta name="jira.description" />
      <meta name="jira.fieldscreen.id" />
      <results>
        <unconditional-result old-status="žée" status="žée" step="14">
          <post-functions>
            <function type="class">
              <arg name="class.name">com.atlassian.jira.workflow.function.issue.UpdateIssueStatusFunction</arg>
            </function>
            <function type="class">
              <arg name="class.name">com.atlassian.jira.workflow.function.misc.CreateCommentFunction</arg>
            </function>
            <function type="class">
              <arg name="class.name">com.atlassian.jira.workflow.function.issue.GenerateChangeHistoryFunction</arg>
            </function>
            <function type="class">
              <arg name="class.name">com.atlassian.jira.workflow.function.issue.IssueReindexFunction</arg>
            </function>
            <function type="class">
              <arg name="eventTypeId">13</arg>
              <arg name="class.name">com.atlassian.jira.workflow.function.event.FireIssueEventFunction</arg>
            </function>
          </post-functions>
        </unconditional-result>
      </results>
    </action>
    <action id="201" name="Back to In Progress (Sales)">
      <meta name="jira.description" />
      <meta name="jira.fieldscreen.id" />
      <restrict-to>
        <conditions>
          <condition type="class">
            <arg name="FIELD_NOTES">Check previuos status</arg>
            <arg name="FIELD_INLINE_SCRIPT">import com.atlassian.jira.component.ComponentAccessor
import org.apache.log4j.Category

def changeHistoryManager = ComponentAccessor.getChangeHistoryManager()
changeHistoryManager.getChangeItemsForField(issue, "status").getAt(changeHistoryManager.getChangeItemsForField(issue, "status").size() - 1).getFromString().equals("II° Level (Sales) - In Progress")</arg>
            <arg name="canned-script">com.onresolve.scriptrunner.canned.jira.workflow.conditions.CustomScriptCondition</arg>
            <arg name="class.name">com.onresolve.jira.groovy.GroovyCondition</arg>
            <arg name="FIELD_SCRIPT_FILE" />
          </condition>
        </conditions>
      </restrict-to>
      <results>
        <unconditional-result old-status="žée" status="žée" step="8">
          <post-functions>
            <function type="class">
              <arg name="field.name">resolution</arg>
              <arg name="full.module.key">com.atlassian.jira.plugin.system.workflowupdate-issue-field-function</arg>
              <arg name="field.value" />
              <arg name="class.name">com.atlassian.jira.workflow.function.issue.UpdateIssueFieldFunction</arg>
            </function>
            <function type="class">
              <arg name="class.name">com.atlassian.jira.workflow.function.issue.UpdateIssueStatusFunction</arg>
            </function>
            <function type="class">
              <arg name="class.name">com.atlassian.jira.workflow.function.misc.CreateCommentFunction</arg>
            </function>
            <function type="class">
              <arg name="class.name">com.atlassian.jira.workflow.function.issue.GenerateChangeHistoryFunction</arg>
            </function>
            <function type="class">
              <arg name="class.name">com.atlassian.jira.workflow.function.issue.IssueReindexFunction</arg>
            </function>
            <function type="class">
              <arg name="eventTypeId">13</arg>
              <arg name="class.name">com.atlassian.jira.workflow.function.event.FireIssueEventFunction</arg>
            </function>
          </post-functions>
        </unconditional-result>
      </results>
    </action>
    <action id="61" name="Send to II° Level (Tech)">
      <meta name="jira.description" />
      <meta name="jira.fieldscreen.id" />
      <results>
        <unconditional-result old-status="žée" status="žée" step="5">
          <post-functions>
            <function type="class">
              <arg name="field.name">jË"w</arg>
              <arg name="full.module.key">com.atlassian.jira.plugin.system.workflowupdate-issue-field-function</arg>
              <arg name="field.value" />
              <arg name="class.name">com.atlassian.jira.workflow.function.issue.UpdateIssueFieldFunction</arg>
            </function>
            <function type="class">
              <arg name="class.name">com.atlassian.jira.workflow.function.issue.UpdateIssueStatusFunction</arg>
            </function>
            <function type="class">
              <arg name="class.name">com.atlassian.jira.workflow.function.misc.CreateCommentFunction</arg>
            </function>
            <function type="class">
              <arg name="class.name">com.atlassian.jira.workflow.function.issue.GenerateChangeHistoryFunction</arg>
            </function>
            <function type="class">
              <arg name="class.name">com.atlassian.jira.workflow.function.issue.IssueReindexFunction</arg>
            </function>
            <function type="class">
              <arg name="eventTypeId">13</arg>
              <arg name="class.name">com.atlassian.jira.workflow.function.event.FireIssueEventFunction</arg>
            </function>
          </post-functions>
        </unconditional-result>
      </results>
    </action>
    <action id="141" name="Back to In Progress (Tech)">
      <meta name="jira.description" />
      <meta name="jira.fieldscreen.id" />
      <restrict-to>
        <conditions>
          <condition type="class">
            <arg name="FIELD_NOTES">Check previuos status</arg>
            <arg name="FIELD_INLINE_SCRIPT">import com.atlassian.jira.component.ComponentAccessor
import org.apache.log4j.Category
Category log = Category.getInstance("com.onresolve.jira.groovy.PostFunction")
log.setLevel(org.apache.log4j.Level.DEBUG)

def changeHistoryManager = ComponentAccessor.getChangeHistoryManager()

//log.debug changeHistoryManager.getChangeItemsForField(issue, "status").getAt(changeHistoryManager.getChangeItemsForField(issue, "status").size() - 1).getFromString()
changeHistoryManager.getChangeItemsForField(issue, "status").getAt(changeHistoryManager.getChangeItemsForField(issue, "status").size() - 1).getFromString().equals("II° Level (Technical) - In Progress")</arg>
            <arg name="canned-script">com.onresolve.scriptrunner.canned.jira.workflow.conditions.CustomScriptCondition</arg>
            <arg name="class.name">com.onresolve.jira.groovy.GroovyCondition</arg>
            <arg name="FIELD_SCRIPT_FILE" />
          </condition>
        </conditions>
      </restrict-to>
      <results>
        <unconditional-result old-status="žée" status="žée" step="7">
          <post-functions>
            <function type="class">
              <arg name="field.name">resolution</arg>
              <arg name="full.module.key">com.atlassian.jira.plugin.system.workflowupdate-issue-field-function</arg>
              <arg name="field.value" />
              <arg name="class.name">com.atlassian.jira.workflow.function.issue.UpdateIssueFieldFunction</arg>
            </function>
            <function type="class">
              <arg name="class.name">com.atlassian.jira.workflow.function.issue.UpdateIssueStatusFunction</arg>
            </function>
            <function type="class">
              <arg name="class.name">com.atlassian.jira.workflow.function.misc.CreateCommentFunction</arg>
            </function>
            <function type="class">
              <arg name="class.name">com.atlassian.jira.workflow.function.issue.GenerateChangeHistoryFunction</arg>
            </function>
            <function type="class">
              <arg name="class.name">com.atlassian.jira.workflow.function.issue.IssueReindexFunction</arg>
            </function>
            <function type="class">
              <arg name="eventTypeId">13</arg>
              <arg name="class.name">com.atlassian.jira.workflow.function.event.FireIssueEventFunction</arg>
            </function>
          </post-functions>
        </unconditional-result>
      </results>
    </action>
  </common-actions>
  <steps>
    <step id="4" name=":—§">
      <meta name="jira.status.id">1</meta>
      <actions>
<common-action id="61" />
<common-action id="151" />
<common-action id="161" />
      </actions>
    </step>
    <step id="5" name="II° Level (Tech) - Backlog">
      <meta name="jira.status.id">13127</meta>
      <actions>
        <action id="71" name="Start Progress">
          <meta name="jira.description" />
          <meta name="jira.fieldscreen.id" />
          <results>
            <unconditional-result old-status="žée" status="žée" step="7">
              <post-functions>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.UpdateIssueStatusFunction</arg>
                </function>
                <function type="class">
                  <arg name="full.module.key">com.atlassian.jira.plugin.system.workflowassigntocurrentuser-function</arg>
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.AssignToCurrentUserFunction</arg>
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.misc.CreateCommentFunction</arg>
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.GenerateChangeHistoryFunction</arg>
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.IssueReindexFunction</arg>
                </function>
                <function type="class">
                  <arg name="eventTypeId">13</arg>
                  <arg name="class.name">com.atlassian.jira.workflow.function.event.FireIssueEventFunction</arg>
                </function>
              </post-functions>
            </unconditional-result>
          </results>
        </action>
      </actions>
    </step>
    <step id="6" name="II° Level (Sales) - Backlog">
      <meta name="jira.status.id">13128</meta>
      <actions>
        <action id="171" name="Start Progress">
          <meta name="jira.description" />
          <meta name="jira.fieldscreen.id" />
          <results>
            <unconditional-result old-status="žée" status="žée" step="8">
              <post-functions>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.UpdateIssueStatusFunction</arg>
                </function>
                <function type="class">
                  <arg name="full.module.key">com.atlassian.jira.plugin.system.workflowassigntocurrentuser-function</arg>
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.AssignToCurrentUserFunction</arg>
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.misc.CreateCommentFunction</arg>
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.GenerateChangeHistoryFunction</arg>
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.IssueReindexFunction</arg>
                </function>
                <function type="class">
                  <arg name="eventTypeId">13</arg>
                  <arg name="class.name">com.atlassian.jira.workflow.function.event.FireIssueEventFunction</arg>
                </function>
              </post-functions>
            </unconditional-result>
          </results>
        </action>
      </actions>
    </step>
    <step id="7" name="II° Level (Tech) - In Progress">
      <meta name="jira.status.id">13129</meta>
      <actions>
<common-action id="161" />
<common-action id="131" />
        <action id="81" name="Click  to call">
          <meta name="jira.description" />
          <meta name="jira.fieldscreen.id" />
          <results>
            <unconditional-result old-status="žée" status="žée" step="7">
              <post-functions>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.UpdateIssueStatusFunction</arg>
                </function>
                <function type="class">
                  <arg name="FIELD_NOTES">Click to Call - API call - GET</arg>
                  <arg name="full.module.key">com.onresolve.jira.groovy.groovyrunnerrungroovy-function</arg>
                  <arg name="FIELD_INLINE_SCRIPT">import groovy.json.JsonSlurper;
import groovy.json.StreamingJsonBuilder;
import com.atlassian.jira.ComponentManager;
import com.atlassian.jira.issue.CustomFieldManager;
import com.atlassian.jira.issue.fields.CustomField;
import com.atlassian.jira.issue.IssueManager;
import com.atlassian.jira.component.ComponentAccessor;
import com.atlassian.jira.issue.Issue;
import com.atlassian.jira.issue.MutableIssue
import org.apache.commons.codec.binary.Base64;
import org.apache.log4j.Category

Category log = Category.getInstance("com.onresolve.jira.groovy.PostFunction")
log.setLevel(org.apache.log4j.Level.DEBUG)

def requestMethod = "GET";

IssueManager issueManager = ComponentAccessor.getIssueManager();
CustomFieldManager customFieldManager = ComponentAccessor.getCustomFieldManager();
CustomField contactNumber = customFieldManager.getCustomFieldObjectByName('Contact Number');


def baseURL = "http://172.29.56.206:8080/mercury/ExtTelephoneCmdAction?control=call&amp;uname=" + issue.assignee.name + "&amp;addresstocall=" + issue.getCustomFieldValue(contactNumber).toString()
URL url
url = new URL(baseURL)
HttpURLConnection connection = (HttpURLConnection)url.openConnection();

connection.setRequestMethod(requestMethod);
connection.setRequestProperty("Content-Type", "application/json");
connection.setRequestProperty("Accept", "*/*");
connection.setDoOutput(true);
connection.setDoInput(true);
connection.connect();

//log.debug "url: " + url
//log.debug "ResponseCode:" + connection.getResponseCode()
//log.debug "ResponseMessage:" + connection.getResponseMessage()
//println("getResponseMessage:" + connection.getResponseMessage())</arg>
                  <arg name="canned-script">com.onresolve.scriptrunner.canned.jira.workflow.postfunctions.CustomScriptFunction</arg>
                  <arg name="class.name">com.onresolve.jira.groovy.GroovyFunctionPlugin</arg>
                  <arg name="FIELD_SCRIPT_FILE" />
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.misc.CreateCommentFunction</arg>
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.GenerateChangeHistoryFunction</arg>
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.IssueReindexFunction</arg>
                </function>
                <function type="class">
                  <arg name="eventTypeId">13</arg>
                  <arg name="class.name">com.atlassian.jira.workflow.function.event.FireIssueEventFunction</arg>
                </function>
              </post-functions>
            </unconditional-result>
          </results>
        </action>
        <action id="91" name="Hold for investigation">
          <meta name="jira.description" />
          <meta name="jira.fieldscreen.id" />
          <results>
            <unconditional-result old-status="žée" status="žée" step="9">
              <post-functions>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.UpdateIssueStatusFunction</arg>
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.misc.CreateCommentFunction</arg>
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.GenerateChangeHistoryFunction</arg>
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.IssueReindexFunction</arg>
                </function>
                <function type="class">
                  <arg name="eventTypeId">13</arg>
                  <arg name="class.name">com.atlassian.jira.workflow.function.event.FireIssueEventFunction</arg>
                </function>
              </post-functions>
            </unconditional-result>
          </results>
        </action>
        <action id="111" name="Transfer to Customer">
          <meta name="jira.description" />
          <meta name="jira.fieldscreen.id" />
          <results>
            <unconditional-result old-status="žée" status="žée" step="11">
              <post-functions>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.UpdateIssueStatusFunction</arg>
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.misc.CreateCommentFunction</arg>
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.GenerateChangeHistoryFunction</arg>
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.IssueReindexFunction</arg>
                </function>
                <function type="class">
                  <arg name="eventTypeId">13</arg>
                  <arg name="class.name">com.atlassian.jira.workflow.function.event.FireIssueEventFunction</arg>
                </function>
              </post-functions>
            </unconditional-result>
          </results>
        </action>
      </actions>
    </step>
    <step id="8" name="II° Level (Sales) - In Progress">
      <meta name="jira.status.id">13130</meta>
      <actions>
<common-action id="61" />
<common-action id="131" />
        <action id="181" name="Click  to call">
          <meta name="jira.description" />
          <meta name="jira.fieldscreen.id" />
          <results>
            <unconditional-result old-status="žée" status="žée" step="8">
              <post-functions>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.UpdateIssueStatusFunction</arg>
                </function>
                <function type="class">
                  <arg name="FIELD_NOTES">Click to Call - API call - GET</arg>
                  <arg name="full.module.key">com.onresolve.jira.groovy.groovyrunnerrungroovy-function</arg>
                  <arg name="FIELD_INLINE_SCRIPT">import groovy.json.JsonSlurper;
import groovy.json.StreamingJsonBuilder;
import com.atlassian.jira.ComponentManager;
import com.atlassian.jira.issue.CustomFieldManager;
import com.atlassian.jira.issue.fields.CustomField;
import com.atlassian.jira.issue.IssueManager;
import com.atlassian.jira.component.ComponentAccessor;
import com.atlassian.jira.issue.Issue;
import com.atlassian.jira.issue.MutableIssue
import org.apache.commons.codec.binary.Base64;
import org.apache.log4j.Category
Category log = Category.getInstance("com.onresolve.jira.groovy.PostFunction")
log.setLevel(org.apache.log4j.Level.DEBUG)

def requestMethod = "GET";

IssueManager issueManager = ComponentAccessor.getIssueManager();
CustomFieldManager customFieldManager = ComponentAccessor.getCustomFieldManager();
CustomField contactNumber = customFieldManager.getCustomFieldObjectByName('Contact Number');


def baseURL = "http://172.29.56.206:8080/mercury/ExtTelephoneCmdAction?control=call&amp;uname=" + issue.assignee.name + "&amp;addresstocall=" + issue.getCustomFieldValue(contactNumber).toString()
URL url
url = new URL(baseURL)
HttpURLConnection connection = (HttpURLConnection)url.openConnection();

connection.setRequestMethod(requestMethod);
connection.setRequestProperty("Content-Type", "application/json");
connection.setRequestProperty("Accept", "*/*");
connection.setDoOutput(true);
connection.setDoInput(true);
connection.connect();

//log.debug "url: " + url
//log.debug "ResponseCode:" + connection.getResponseCode()
//log.debug "ResponseMessage:" + connection.getResponseMessage()
//println("getResponseMessage:" + connection.getResponseMessage())</arg>
                  <arg name="canned-script">com.onresolve.scriptrunner.canned.jira.workflow.postfunctions.CustomScriptFunction</arg>
                  <arg name="class.name">com.onresolve.jira.groovy.GroovyFunctionPlugin</arg>
                  <arg name="FIELD_SCRIPT_FILE" />
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.misc.CreateCommentFunction</arg>
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.GenerateChangeHistoryFunction</arg>
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.IssueReindexFunction</arg>
                </function>
                <function type="class">
                  <arg name="eventTypeId">13</arg>
                  <arg name="class.name">com.atlassian.jira.workflow.function.event.FireIssueEventFunction</arg>
                </function>
              </post-functions>
            </unconditional-result>
          </results>
        </action>
        <action id="191" name="Hold for investigation">
          <meta name="jira.description" />
          <meta name="jira.fieldscreen.id" />
          <results>
            <unconditional-result old-status="žée" status="žée" step="10">
              <post-functions>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.UpdateIssueStatusFunction</arg>
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.misc.CreateCommentFunction</arg>
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.GenerateChangeHistoryFunction</arg>
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.IssueReindexFunction</arg>
                </function>
                <function type="class">
                  <arg name="eventTypeId">13</arg>
                  <arg name="class.name">com.atlassian.jira.workflow.function.event.FireIssueEventFunction</arg>
                </function>
              </post-functions>
            </unconditional-result>
          </results>
        </action>
        <action id="211" name="Transfer to Customer">
          <meta name="jira.description" />
          <meta name="jira.fieldscreen.id" />
          <results>
            <unconditional-result old-status="žée" status="žée" step="12">
              <post-functions>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.UpdateIssueStatusFunction</arg>
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.misc.CreateCommentFunction</arg>
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.GenerateChangeHistoryFunction</arg>
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.IssueReindexFunction</arg>
                </function>
                <function type="class">
                  <arg name="eventTypeId">13</arg>
                  <arg name="class.name">com.atlassian.jira.workflow.function.event.FireIssueEventFunction</arg>
                </function>
              </post-functions>
            </unconditional-result>
          </results>
        </action>
      </actions>
    </step>
    <step id="9" name="II° Level (Tech) - Hold for investigation">
      <meta name="jira.status.id">13131</meta>
      <actions>
<common-action id="141" />
      </actions>
    </step>
    <step id="10" name="II° Level (Sales) - Hold for investigation">
      <meta name="jira.status.id">13132</meta>
      <actions>
<common-action id="201" />
      </actions>
    </step>
    <step id="11" name="II° Level (Tech) - Waiting for customer">
      <meta name="jira.status.id">13133</meta>
      <actions>
<common-action id="141" />
      </actions>
    </step>
    <step id="12" name="II° Level (Sales) - Waiting for customer">
      <meta name="jira.status.id">13134</meta>
      <actions>
<common-action id="201" />
      </actions>
    </step>
    <step id="13" name="Eë(÷">
      <meta name="jira.status.id">5</meta>
      <actions>
<common-action id="151" />
<common-action id="201" />
<common-action id="141" />
      </actions>
    </step>
    <step id="14" name="Closed">
      <meta name="jira.status.id">6</meta>
      <actions>
        <action id="221" name="ReOpen">
          <meta name="jira.description" />
          <meta name="jira.fieldscreen.id" />
          <results>
            <unconditional-result old-status="žée" status="žée" step="4">
              <post-functions>
                <function type="class">
                  <arg name="field.name">resolution</arg>
                  <arg name="full.module.key">com.atlassian.jira.plugin.system.workflowupdate-issue-field-function</arg>
                  <arg name="field.value" />
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.UpdateIssueFieldFunction</arg>
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.UpdateIssueStatusFunction</arg>
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.misc.CreateCommentFunction</arg>
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.GenerateChangeHistoryFunction</arg>
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.IssueReindexFunction</arg>
                </function>
                <function type="class">
                  <arg name="eventTypeId">13</arg>
                  <arg name="class.name">com.atlassian.jira.workflow.function.event.FireIssueEventFunction</arg>
                </function>
              </post-functions>
            </unconditional-result>
          </results>
        </action>
      </actions>
    </step>
  </steps>
</workflow>