<?xml version='1.0' encoding='UTF-8'?>
<workflow>
  <meta name="jira.description" />
  <meta name="jira.update.author.key">arianna.fabbri</meta>
  <meta name="jira.updated.date">1640595223528</meta>
  <initial-actions>
    <action id="1" name="Create">
      <validators>
        <validator name="" type="class">
          <arg name="permission">Create Issue</arg>
          <arg name="class.name">com.atlassian.jira.workflow.validator.PermissionValidator</arg>
        </validator>
      </validators>
      <results>
        <unconditional-result old-status="žée" status="¢—§" step="2">
          <post-functions>
            <function type="class">
              <arg name="scopeSource-linkEnd" />
              <arg name="append.value" />
              <arg name="maxAllowed-integerValue" />
              <arg name="runAsUser-user" />
              <arg name="field.value">No</arg>
              <arg name="field.name">customfield_16804</arg>
              <arg name="scopeType">H</arg>
              <arg name="destination-scopeTarget">ISSUE_IN_TRANSITION</arg>
              <arg name="full.module.key">com.googlecode.jira-suite-utilitiesupdateIssueCustomField-function</arg>
              <arg name="scopeDestination-linkEnd" />
              <arg name="preconditionAwareFunctionMode-textValue">ALWAYS</arg>
              <arg name="jsuWorkflowParamsVersion-textValue">2.25.0</arg>
              <arg name="source-scopeTarget">ISSUE_IN_TRANSITION</arg>
              <arg name="scopeDestination-jql" />
              <arg name="class.name">com.googlecode.jsu.workflow.function.UpdateIssueCustomFieldPostFunction</arg>
              <arg name="scopeSource-jql" />
            </function>
            <function type="class">
              <arg name="FIELD_SECURITY_LEVEL_ID">10300</arg>
              <arg name="FIELD_FUNCTION_ID">3761ef7f-f1ad-4cb9-8f2e-a531c8d07315</arg>
              <arg name="full.module.key">com.onresolve.jira.groovy.groovyrunnerscriptrunner-workflow-function-com.onresolve.scriptrunner.canned.jira.workflow.postfunctions.SetIssueSecurity</arg>
              <arg name="canned-script">com.onresolve.scriptrunner.canned.jira.workflow.postfunctions.SetIssueSecurity</arg>
              <arg name="FIELD_CONDITION">{"script":"issue.getProjectObject().key == 'EC'","scriptPath":null}</arg>
              <arg name="class.name">com.onresolve.jira.groovy.GroovyFunctionPlugin</arg>
            </function>
            <function type="class">
              <arg name="class.name">com.atlassian.jira.workflow.function.issue.IssueCreateFunction</arg>
            </function>
            <function type="class">
              <arg name="full.module.key">com.atlassian.jira.plugin.system.workflowassigntoreporter-function</arg>
              <arg name="class.name">com.atlassian.jira.workflow.function.issue.AssignToReporterFunction</arg>
            </function>
            <function type="class">
              <arg name="class.name">com.atlassian.jira.workflow.function.issue.IssueReindexFunction</arg>
            </function>
            <function type="class">
              <arg name="FIELD_FUNCTION_ID">453159e6-3092-47b6-828d-d1047e56bd7c</arg>
              <arg name="FIELD_SCRIPT_FILE_OR_SCRIPT">{"script":null,"scriptPath":"customScripts/EC_UpdateVisibilityGroups.groovy"}</arg>
              <arg name="full.module.key">com.onresolve.jira.groovy.groovyrunnerscriptrunner-workflow-function-com.onresolve.scriptrunner.canned.jira.workflow.postfunctions.CustomScriptFunction</arg>
              <arg name="canned-script">com.onresolve.scriptrunner.canned.jira.workflow.postfunctions.CustomScriptFunction</arg>
              <arg name="class.name">com.onresolve.jira.groovy.GroovyFunctionPlugin</arg>
            </function>
            <function type="class">
              <arg name="FIELD_FUNCTION_ID">9420fc17-5028-475e-ba8e-e5bf4dd2e460</arg>
              <arg name="FIELD_NOTES">Create Confluence Page "Costs vs Benefits" from template</arg>
              <arg name="FIELD_SCRIPT_FILE_OR_SCRIPT">{"script":"import com.atlassian.applinks.api.ApplicationLink\nimport com.atlassian.applinks.api.ApplicationLinkService\nimport com.atlassian.applinks.api.application.confluence.ConfluenceApplicationType\nimport com.atlassian.jira.issue.Issue\nimport com.atlassian.sal.api.component.ComponentLocator\nimport com.atlassian.sal.api.net.Request\nimport com.atlassian.sal.api.net.Response\nimport com.atlassian.sal.api.net.ResponseException\nimport com.atlassian.sal.api.net.ResponseHandler\nimport groovy.json.JsonBuilder\nimport groovy.xml.MarkupBuilder\nimport com.atlassian.jira.issue.MutableIssue\nimport com.atlassian.jira.component.ComponentAccessor\nimport com.atlassian.jira.issue.IssueManager\nimport org.apache.log4j.Category\nimport groovy.json.JsonSlurper\n\nlog.setLevel(org.apache.log4j.Level.DEBUG)\n\nstatic ApplicationLink getPrimaryConfluenceLink() {\n    def applicationLinkService = ComponentLocator.getComponent(ApplicationLinkService.class)\n    final ApplicationLink conflLink = applicationLinkService.getPrimaryApplicationLink(ConfluenceApplicationType.class)\n    conflLink\n}\n\nIssueManager issueManager = ComponentAccessor.getIssueManager()\n//Per test da console\n//MutableIssue issue = issueManager.getIssueByKeyIgnoreCase(\"EC-9524\")\n\ndef confluenceLink = getPrimaryConfluenceLink()\nassert confluenceLink // must have a working app link set up\n\ndef authenticatedRequestFactory = confluenceLink.createImpersonatingAuthenticatedRequestFactory()\nString requestUrlTemplate = \"/rest/experimental/template/page?spaceKey=EC&amp;expand=body\"\ndef request = authenticatedRequestFactory.createRequest(Request.MethodType.GET, requestUrlTemplate)\nrequest.addHeader(\"Content-Type\", \"application/json\")\nString myResult = request.execute()\nObject templates = new JsonSlurper().parseText(myResult)\nlog.debug templates[\"results\"]\nString templateBody\nfor(i=0; i&lt;templates[\"results\"].size(); i++){\n    // ---------&gt; TO DO PROD: change Template ID\n    if(templates[\"results\"][i].templateId.toString().equals(\"101253121\")){\n        templateBody = templates[\"results\"][i].body[\"storage\"][\"value\"]\n    }\n}\nlog.debug \"templateBody: \" + templateBody\n\n// write storage format using an XML builder\ndef writer = new StringWriter()\ndef xml = new MarkupBuilder(writer)\nxml.'ac:structured-macro'('ac:name': \"jira\") {\n    'ac:parameter'('ac:name': \"key\", issue.key)\n    'ac:parameter'('ac:name': \"server\", \"System JIRA\")\n    'ac:parameter'('ac:name': \"serverId\", \"6ccfe013-40c5-3a81-8b95-9f3b656e5636\")\n}\n\n// print the storage that will be the content of the page\nlog.debug(writer.toString())\n//String bodyTemplate = page[\"body\"][\"storage\"][\"value\"]\n// set the page title - this should be unique in the space or page creation will fail\ndef pageTitle = issue.key + \" \" + issue.summary + \" - Costs vs Benefits Analysis\"\n//----------&gt; TO DO PROD: change ParentPage ID\ndef parentPageID = 91103712\ndef spaceKey=\"EC\"\n\ndef params = [\n    type : \"page\",\n    title: pageTitle,\n    space: [\n        key: spaceKey // set the space key - or calculate it from the project or something\n    ],\n    // if you want to specify create the page under another, do it like this:\n     ancestors: [\n         [\n             type: \"page\",\n             id: parentPageID,\n         ]\n     ],\n    body : [\n        storage: [\n            value         : writer.toString() + templateBody.toString(),\n            representation: \"storage\"\n        ]\n    ]\n]\ndef jsonSlurper = new JsonSlurper()\nauthenticatedRequestFactory\n    .createRequest(Request.MethodType.POST, \"rest/api/content\")\n    .addHeader(\"Content-Type\", \"application/json\")\n    .setRequestBody(new JsonBuilder(params).toString())\n    .execute(new ResponseHandler&lt;Response&gt;() {\n        @Override\n        void handle(Response response) throws ResponseException {\n            if (response.statusCode != HttpURLConnection.HTTP_OK) {\n                throw new Exception(response.getResponseBodyAsString())\n            } else {\n                def webUrl = jsonSlurper.parseText(response.responseBodyAsString)[\"_links\"][\"webui\"]\n            }\n        }\n    })\n    ","scriptPath":null}</arg>
              <arg name="full.module.key">com.onresolve.jira.groovy.groovyrunnerscriptrunner-workflow-function-com.onresolve.scriptrunner.canned.jira.workflow.postfunctions.CustomScriptFunction</arg>
              <arg name="canned-script">com.onresolve.scriptrunner.canned.jira.workflow.postfunctions.CustomScriptFunction</arg>
              <arg name="class.name">com.onresolve.jira.groovy.GroovyFunctionPlugin</arg>
            </function>
            <function type="class">
              <arg name="FIELD_FUNCTION_ID">2643bac1-7385-4986-bfce-605bb83e7912</arg>
              <arg name="FIELD_SCRIPT_FILE_OR_SCRIPT">{"script":null,"scriptPath":"customScripts/EC_CreateCodesIssues.groovy"}</arg>
              <arg name="full.module.key">com.onresolve.jira.groovy.groovyrunnerscriptrunner-workflow-function-com.onresolve.scriptrunner.canned.jira.workflow.postfunctions.CustomScriptFunction</arg>
              <arg name="canned-script">com.onresolve.scriptrunner.canned.jira.workflow.postfunctions.CustomScriptFunction</arg>
              <arg name="class.name">com.onresolve.jira.groovy.GroovyFunctionPlugin</arg>
            </function>
            <function type="class">
              <arg name="eventTypeId">10004</arg>
              <arg name="full.module.key">com.atlassian.jira.plugin.system.workflowfireevent-function</arg>
              <arg name="class.name">com.atlassian.jira.workflow.function.event.FireIssueEventFunction</arg>
            </function>
          </post-functions>
        </unconditional-result>
      </results>
    </action>
  </initial-actions>
  <common-actions>
    <action id="51" name="‰Þ" view="fieldscreen">
      <meta name="jira.description" />
      <meta name="jira.fieldscreen.id">20123</meta>
      <restrict-to>
        <conditions>
          <condition type="class">
            <arg name="FIELD_FUNCTION_ID">e112ef5b-9304-4745-b054-11b0bab5bc80</arg>
            <arg name="FIELD_NOTES">EC can be Closed only if all the sub-tasks and all the involved codes have been completed</arg>
            <arg name="FIELD_SCRIPT_FILE_OR_SCRIPT">{"script":"import com.atlassian.jira.issue.link.IssueLink\nimport com.atlassian.jira.component.ComponentAccessor;\n\ndef canBeClosed=true\ndef subTaskIssueLinks = issue.getSubTaskObjects()\nfor(st in subTaskIssueLinks){\n    if(st.status.name!=\"Done\"){\n        canBeClosed=false\n    }\n}\n\nList&lt;IssueLink&gt; allOutIssueLink = ComponentAccessor.getIssueLinkManager().getOutwardLinks(issue.getId());\nfor (Iterator&lt;IssueLink&gt; outIterator = allOutIssueLink.iterator(); outIterator.hasNext();) {\n    IssueLink issueLink = (IssueLink) outIterator.next();\n    def linkedIssue = issueLink.getDestinationObject()\n    String type = linkedIssue.getIssueType().getName();\n\n    if(type.equals(\"Involved Code\")){\n        if(linkedIssue.resolution==null){\n            canBeClosed=false\n        }\n    }\n}\n\npassesCondition = canBeClosed","scriptPath":null}</arg>
            <arg name="canned-script">com.onresolve.scriptrunner.canned.jira.workflow.conditions.CustomScriptCondition</arg>
            <arg name="class.name">com.onresolve.jira.groovy.GroovyCondition</arg>
          </condition>
        </conditions>
      </restrict-to>
      <validators>
        <validator name="" type="class">
          <arg name="contextHandling" />
          <arg name="hidFieldsList">timespent@@</arg>
          <arg name="jsuWorkflowParamsVersion-textValue">2.25.0</arg>
          <arg name="class.name">com.googlecode.jsu.workflow.validator.FieldsRequiredValidator</arg>
          <arg name="customErrorMessage-textValue" />
        </validator>
      </validators>
      <results>
        <unconditional-result old-status="žée" status="žée" step="7">
          <post-functions>
            <function type="class">
              <arg name="scopeSource-linkEnd" />
              <arg name="append.value" />
              <arg name="maxAllowed-integerValue" />
              <arg name="runAsUser-user" />
              <arg name="field.value">%%CURRENT_DATETIME%%</arg>
              <arg name="field.name">customfield_12852</arg>
              <arg name="scopeType">H</arg>
              <arg name="destination-scopeTarget">ISSUE_IN_TRANSITION</arg>
              <arg name="full.module.key">com.googlecode.jira-suite-utilitiesupdateIssueCustomField-function</arg>
              <arg name="scopeDestination-linkEnd" />
              <arg name="preconditionAwareFunctionMode-textValue">ALWAYS</arg>
              <arg name="jsuWorkflowParamsVersion-textValue">2.25.0</arg>
              <arg name="source-scopeTarget">ISSUE_IN_TRANSITION</arg>
              <arg name="scopeDestination-jql" />
              <arg name="class.name">com.googlecode.jsu.workflow.function.UpdateIssueCustomFieldPostFunction</arg>
              <arg name="scopeSource-jql" />
            </function>
            <function type="class">
              <arg name="field.copyFieldSource1" />
              <arg name="textValue">6</arg>
              <arg name="scopeSource-linkEnd" />
              <arg name="maxAllowed-integerValue">50</arg>
              <arg name="workflowName-textValue">EC HUB: Epic Tracking Workflow</arg>
              <arg name="performTransitionAsUser-user" />
              <arg name="scopeType">ò</arg>
              <arg name="destination-scopeTarget">ò</arg>
              <arg name="full.module.key">com.googlecode.jira-suite-utilitieslinkedtransition-function</arg>
              <arg name="scopeDestination-linkEnd" />
              <arg name="jsuWorkflowParamsVersion-textValue">2.25.0</arg>
              <arg name="preconditionAwareFunctionMode-textValue">ALWAYS</arg>
              <arg name="source-scopeTarget">ISSUE_IN_TRANSITION</arg>
              <arg name="{^êÕj[">11</arg>
              <arg name="scopeDestination-jql" />
              <arg name="class.name">ch.beecom.jira.jsu.workflow.function.linkedtransition.LinkedTransitionFunction</arg>
              <arg name="scopeSource-jql" />
              <arg name="status" />
            </function>
            <function type="class">
              <arg name="class.name">com.atlassian.jira.workflow.function.issue.UpdateIssueStatusFunction</arg>
            </function>
            <function type="class">
              <arg name="class.name">com.atlassian.jira.workflow.function.misc.CreateCommentFunction</arg>
            </function>
            <function type="class">
              <arg name="class.name">com.atlassian.jira.workflow.function.issue.GenerateChangeHistoryFunction</arg>
            </function>
            <function type="class">
              <arg name="class.name">com.atlassian.jira.workflow.function.issue.IssueReindexFunction</arg>
            </function>
            <function type="class">
              <arg name="eventTypeId">13</arg>
              <arg name="class.name">com.atlassian.jira.workflow.function.event.FireIssueEventFunction</arg>
            </function>
          </post-functions>
        </unconditional-result>
      </results>
    </action>
  </common-actions>
  <steps>
    <step id="2" name="To be Evaluated">
      <meta name="jira.status.id">14630</meta>
      <actions>
        <action id="11" name="Start Analysis">
          <meta name="jira.description" />
          <meta name="jira.fieldscreen.id" />
          <results>
            <unconditional-result old-status="žée" status="žée" step="3">
              <post-functions>
                <function type="class">
                  <arg name="scopeSource-linkEnd" />
                  <arg name="append.value" />
                  <arg name="maxAllowed-integerValue" />
                  <arg name="runAsUser-user" />
                  <arg name="field.value">%%CURRENT_DATETIME%%</arg>
                  <arg name="field.name">customfield_23260</arg>
                  <arg name="scopeType">H</arg>
                  <arg name="destination-scopeTarget">ISSUE_IN_TRANSITION</arg>
                  <arg name="full.module.key">com.googlecode.jira-suite-utilitiesupdateIssueCustomField-function</arg>
                  <arg name="scopeDestination-linkEnd" />
                  <arg name="preconditionAwareFunctionMode-textValue">ALWAYS</arg>
                  <arg name="jsuWorkflowParamsVersion-textValue">2.25.0</arg>
                  <arg name="source-scopeTarget">ISSUE_IN_TRANSITION</arg>
                  <arg name="scopeDestination-jql" />
                  <arg name="class.name">com.googlecode.jsu.workflow.function.UpdateIssueCustomFieldPostFunction</arg>
                  <arg name="scopeSource-jql" />
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.UpdateIssueStatusFunction</arg>
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.misc.CreateCommentFunction</arg>
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.GenerateChangeHistoryFunction</arg>
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.IssueReindexFunction</arg>
                </function>
                <function type="class">
                  <arg name="eventTypeId">13</arg>
                  <arg name="class.name">com.atlassian.jira.workflow.function.event.FireIssueEventFunction</arg>
                </function>
              </post-functions>
            </unconditional-result>
          </results>
        </action>
      </actions>
    </step>
    <step id="3" name="v• »¨">
      <meta name="jira.status.id">10010</meta>
      <actions>
        <action id="21" name="Analysis OK - Move to Backlog" view="fieldscreen">
          <meta name="jira.description" />
          <meta name="jira.fieldscreen.id">20122</meta>
          <results>
            <unconditional-result old-status="žée" status="žée" step="4">
              <post-functions>
                <function type="class">
                  <arg name="scopeSource-linkEnd" />
                  <arg name="append.value" />
                  <arg name="maxAllowed-integerValue" />
                  <arg name="runAsUser-user" />
                  <arg name="field.value">%%CURRENT_DATETIME%%</arg>
                  <arg name="field.name">customfield_12846</arg>
                  <arg name="scopeType">H</arg>
                  <arg name="destination-scopeTarget">ISSUE_IN_TRANSITION</arg>
                  <arg name="full.module.key">com.googlecode.jira-suite-utilitiesupdateIssueCustomField-function</arg>
                  <arg name="scopeDestination-linkEnd" />
                  <arg name="preconditionAwareFunctionMode-textValue">ALWAYS</arg>
                  <arg name="jsuWorkflowParamsVersion-textValue">2.25.0</arg>
                  <arg name="source-scopeTarget">ISSUE_IN_TRANSITION</arg>
                  <arg name="scopeDestination-jql" />
                  <arg name="class.name">com.googlecode.jsu.workflow.function.UpdateIssueCustomFieldPostFunction</arg>
                  <arg name="scopeSource-jql" />
                </function>
                <function type="class">
                  <arg name="FIELD_FUNCTION_ID">a38e0673-043d-4d90-b13c-b65afda682ec</arg>
                  <arg name="FIELD_SCRIPT_FILE_OR_SCRIPT">{"script":null,"scriptPath":"customScripts/EC_UpdateECNumber.groovy"}</arg>
                  <arg name="full.module.key">com.onresolve.jira.groovy.groovyrunnerscriptrunner-workflow-function-com.onresolve.scriptrunner.canned.jira.workflow.postfunctions.CustomScriptFunction</arg>
                  <arg name="canned-script">com.onresolve.scriptrunner.canned.jira.workflow.postfunctions.CustomScriptFunction</arg>
                  <arg name="class.name">com.onresolve.jira.groovy.GroovyFunctionPlugin</arg>
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.UpdateIssueStatusFunction</arg>
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.misc.CreateCommentFunction</arg>
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.GenerateChangeHistoryFunction</arg>
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.IssueReindexFunction</arg>
                </function>
                <function type="class">
                  <arg name="field.existingAttachmentEnablingCustomFieldId">NEVER</arg>
                  <arg name="scopeSource-linkEnd" />
                  <arg name="targetIssueTypeDefinedByCfSelection" />
                  <arg name="issueTypeId">7</arg>
                  <arg name="scopeType">ò</arg>
                  <arg name="jsuWorkflowParamsVersion-textValue">2.25.0</arg>
                  <arg name="source-scopeTarget">ISSUE_IN_TRANSITION</arg>
                  <arg name="field.attachmentEnablingCustomFieldId">NEVER</arg>
                  <arg name="targetIssueType">SELECTED_ISSUE_TYPE</arg>
                  <arg name="scopeSource-jql" />
                  <arg name="createIssueAsUser-user">atlassian_faac_service_desk</arg>
                  <arg name="field.copyTransitionComment">false</arg>
                  <arg name="targetProjectType">H</arg>
                  <arg name="maxAllowed-integerValue" />
                  <arg name="transitionAttachmentsOperation">rr</arg>
                  <arg name="field.issueAssignTo">ASSIGN_TO_UNASSIGNED</arg>
                  <arg name="╡крz╙ыв7Ь╡'еy╦^t+м╢ЙЕЙщ]" />
                  <arg name="destination-scopeTarget">ò</arg>
                  <arg name="full.module.key">com.googlecode.jira-suite-utilitiescreatelinkedissue-function</arg>
                  <arg name="scopeDestination-linkEnd" />
                  <arg name="field.enablingCustomFieldId" />
                  <arg name="preconditionAwareFunctionMode-textValue">ALWAYS</arg>
                  <arg name="scopeDestination-jql" />
                  <arg name="²æÅºw-ì">[{"type":"CopyFieldFromOriginToNew","enabled":true,"config":{"concatenationMode":"OVERWRITE","sourceFieldId":"summary","destinationFieldId":"customfield_10004"}},{"type":"CopyFieldFromOriginToNew","enabled":true,"config":{"concatenationMode":"OVERWRITE","sourceFieldId":"summary","destinationFieldId":"summary"}},{"type":"CopyFieldFromOriginToNew","enabled":true,"config":{"concatenationMode":"OVERWRITE","sourceFieldId":"description","destinationFieldId":"description"}},{"type":"CopyFieldFromOriginToNew","enabled":true,"config":{"concatenationMode":"OVERWRITE","sourceFieldId":"customfield_12834","destinationFieldId":"customfield_12834"}},{"type":"CopyFieldFromOriginToNew","enabled":true,"config":{"concatenationMode":"OVERWRITE","sourceFieldId":"priority","destinationFieldId":"priority"}}]</arg>
                  <arg name="class.name">ch.beecom.jira.jsu.workflow.function.createlinkedissue.CreateLinkedIssueFunction</arg>
                  <arg name="projectId">11228</arg>
                </function>
                <function type="class">
                  <arg name="eventTypeId">11400</arg>
                  <arg name="full.module.key">com.atlassian.jira.plugin.system.workflowfireevent-function</arg>
                  <arg name="class.name">com.atlassian.jira.workflow.function.event.FireIssueEventFunction</arg>
                </function>
                <function type="class">
                  <arg name="FIELD_FUNCTION_ID">cd6caec9-eb3d-4007-82fe-997c60adc9a5</arg>
                  <arg name="FIELD_NOTES">Create sub-tasks</arg>
                  <arg name="FIELD_SCRIPT_FILE_OR_SCRIPT">{"script":"import com.atlassian.jira.event.issue.AbstractIssueEventListener\nimport com.atlassian.jira.event.issue.IssueEvent\n\nimport com.atlassian.jira.issue.link.IssueLink\nimport com.atlassian.jira.util.ImportUtils\nimport com.atlassian.jira.issue.link.IssueLinkManager\nimport com.atlassian.jira.issue.CustomFieldManager\nimport com.atlassian.jira.issue.Issue\nimport com.atlassian.jira.issue.IssueManager\nimport com.atlassian.jira.issue.IssueFactory\nimport com.atlassian.jira.component.ComponentAccessor\nimport com.atlassian.crowd.embedded.api.Group\nimport com.atlassian.jira.issue.fields.OrderableField\nimport com.atlassian.jira.issue.fields.CustomField\nimport com.atlassian.jira.issue.util.IssueChangeHolder\nimport com.atlassian.jira.issue.util.DefaultIssueChangeHolder\nimport com.atlassian.jira.issue.ModifiedValue\nimport com.atlassian.jira.project.ProjectManager\nimport com.atlassian.jira.issue.customfields.option.Option\nimport com.atlassian.jira.event.issue.AbstractIssueEventListener\nimport com.atlassian.jira.event.issue.IssueEvent\nimport com.atlassian.jira.user.ApplicationUser\nimport com.atlassian.jira.issue.index.IssueIndexingService\nimport com.atlassian.jira.issue.MutableIssue\nimport com.atlassian.jira.config.util.JiraHome\nimport com.atlassian.jira.event.type.EventDispatchOption\nimport org.apache.log4j.Category\nlog.setLevel(org.apache.log4j.Level.DEBUG)\n\nIssueManager issueMgr = ComponentAccessor.getIssueManager()\n//Issue issue = issueMgr.getIssueByKeyIgnoreCase(\"EC-10523\")\n\nCustomFieldManager \t\tcustomFieldManager \t = ComponentAccessor.getCustomFieldManager()\nIssueFactory \t\t\tissueFactory \t\t = ComponentAccessor.getIssueFactory()\nIssueChangeHolder \t\tchangeHolder \t\t = new DefaultIssueChangeHolder()\nProjectManager \t\t\tprojectMgr \t\t\t = ComponentAccessor.getProjectManager()\nIssueIndexingService \tissueIndexingService = ComponentAccessor.getComponent(IssueIndexingService)\ndef constantManager = ComponentAccessor.getConstantsManager()\ndef subTaskManager = ComponentAccessor.getSubTaskManager()\ndef user = ComponentAccessor.getJiraAuthenticationContext().getLoggedInUser()\ndef wasIndexing = ImportUtils.indexIssues\nImportUtils.indexIssues = true\nClass objectFacadeClass = ComponentAccessor.getPluginAccessor().getClassLoader().findClass(\"com.riadalabs.jira.plugins.insight.channel.external.api.facade.ObjectFacade\")\ndef objectFacade = ComponentAccessor.getOSGiComponentInstanceOfType(objectFacadeClass)\nClass iqlFacadeClass = ComponentAccessor.getPluginAccessor().getClassLoader().findClass(\"com.riadalabs.jira.plugins.insight.channel.external.api.facade.IQLFacade\");\ndef iqlFacade = ComponentAccessor.getOSGiComponentInstanceOfType(iqlFacadeClass);\n\nissueIndexingService.reIndex(issue)\n\ndef ecNumber = customFieldManager.getCustomFieldObjectsByName(\"EC Number\")[0]\ndef involvedActivities = customFieldManager.getCustomFieldObjectsByName(\"Involved Activities\")[0];\ndef createdSubtasks = new ArrayList()\n\nList newvalues = issue.getCustomFieldValue(involvedActivities) as List\nlog.debug \"\\n\" + \"NEW VALUES: \" + newvalues + \"\\n\"\nlog.debug \"ecNumber: \" + issue.getCustomFieldValue(ecNumber)\n\n/*Per ogni newvalue verifica se era gi\u00e0 presente anche negli oldvalue -&gt; se si, ignora, se no, crea subtask e lo posiziona correttamente*/\nfor (newval in newvalues){\n\tlog.debug \"newval: \" + newval\n    \n    /*Esclude l'attivit\u00e0 \"None\" e Verifica che non esista gi\u00e0 un subtask per la stessa attivit\u00e0*/\n    def issueSubTasks = issue.getSubTaskObjects()\n    log.debug \"\\n\" + \"SUBTASK ESISTENTI SULLA ISSUE: \" + issueSubTasks + \"\\n\"\n\n    boolean existing=false\n\n    issueSubTasks.each{st -&gt;\n        def currentSubTaskSummary = ComponentAccessor.getIssueManager().getIssueByCurrentKey(st.toString()).getSummary()\n        if(currentSubTaskSummary.equals(issue.getCustomFieldValue(ecNumber).toString() + \" - \" + newval)){\n            log.debug \"\\n\" + \"ESISTE GI\u00e0 UN SUBTASK SULLA ISSUE ${currentSubTaskSummary} PER QUESTA ATTIVIT\u00e0 --&gt; SKIP\" + \"\\n\"\n            existing=true\n        }\n    }\n\n    if(!existing &amp;&amp; newval!=\"\"){\n        log.debug \"\\n\" + \"NON ESISTE UN SUBTASK SULLA ISSUE PER QUESTA ATTIVIT\u00e0 --&gt; CREARE\" + \"\\n\"\n        MutableIssue newSubTask\n        //ID of \"HUB Engineering Cell\" Insight Schema\n        int schemaId = 30\n        CustomField insightCF = ComponentAccessor.getCustomFieldManager().getCustomFieldObjectsByName(\"EC_ACTIVITY_REF\")[0]; \n        Long newIndex\n        List&lt;IssueLink&gt; subTaskIssueLinks = subTaskManager.getSubTaskIssueLinks(issue.id)\n        boolean foundPrev\n\n        /*Cerca l'oggetto Insight con Name = al nome della nuova attivit\u00e0 selezionata*/\n        def objects = iqlFacade.findObjectsByIQLAndSchema(schemaId, \"Name = \\\"\" + newval.toString() + \"\\\"\");\n        log.debug \"objects: \" + \"Name = \\\"\" + newval.toString() + \"\\\"\"\n        if (objects != null &amp;&amp; objects.size() &gt; 0){\n\n            /*Estrae il DEFAULT_ASSIGNEE dell'attivit\u00e0*/\n            def obTriage = objectFacade.loadObjectAttributeBean(objects[0].getId(), \"DEFAULT_ASSIGNEE\") ? objectFacade.loadObjectAttributeBean(objects[0].getId(), \"DEFAULT_ASSIGNEE\").createMutable() : null\n            def assignee = obTriage ? obTriage.getObjectAttributeValueBeans() : null\n\n            /*Crea sub-task e lo posiziona correttamente nella lista*/\n            newSubTask = issueFactory.getIssue()\n            if(assignee){\n                newSubTask.setAssigneeId(assignee[0].getValue().toString())\n            }\n            log.debug \"Summary nuovo sub-task: \" + issue.getCustomFieldValue(ecNumber).toString() + \" - \" + newval.toString()\n            newSubTask.setSummary(issue.getCustomFieldValue(ecNumber).toString() + \" - \" + newval.toString())\n            newSubTask.setParentObject(issue)\n            newSubTask.setProjectObject(issue.getProjectObject())\n            newSubTask.setIssueTypeId(constantManager.getAllIssueTypeObjects().find{ it.getName() == \"Sub-task\"}.id)\n\n            def newIssueParams = [\"issue\" : newSubTask] as Map&lt;String,Object&gt;    \n                def subTaskCreated = issueMgr.createIssueObject(user, newIssueParams)\n                subTaskManager.createSubTaskIssueLink(issue, newSubTask, user)\n            issueIndexingService.reIndex(issue)\n\n            MutableIssue mi = (MutableIssue) subTaskCreated;\n            mi.setCustomFieldValue(insightCF, objects);\n            ComponentAccessor.getIssueManager().updateIssue(user, mi, EventDispatchOption.DO_NOT_DISPATCH, false);\n\t\t\tlog.debug \"mi: \" + mi\n            def item = new ArrayList()\n            item.add(subTaskCreated)\n\n            /*Estra l'INDEX di posizionamento sequenziale della nuova attivit\u00e0*/\n            obTriage = objectFacade.loadObjectAttributeBean(objects[0].getId(), \"INDEX\").createMutable()  \n            def index = obTriage.getObjectAttributeValueBeans()\n            log.debug \"New activity index:  \" + index[0].getValue()\n\n            issueSubTasks = issue.getSubTaskObjects()\n            newIndex=0\n            subTaskIssueLinks = subTaskManager.getSubTaskIssueLinks(issue.id)\n\n            createdSubtasks.add(item)\n            log.debug \"\\n\" + \"AGGIORNO LISTA SUBTASK APPENA CREATI ----&gt; \" + createdSubtasks\n            issueIndexingService.reIndex(issue)\n        }\n\n    }else{\n        log.debug \"esiste gi\u00e0, non la ricreo - o \u00e8 stato selezionato None\"\n    }\n}\n","scriptPath":null,"parameters":{}}</arg>
                  <arg name="full.module.key">com.onresolve.jira.groovy.groovyrunnerscriptrunner-workflow-function-com.onresolve.scriptrunner.canned.jira.workflow.postfunctions.CustomScriptFunction</arg>
                  <arg name="canned-script">com.onresolve.scriptrunner.canned.jira.workflow.postfunctions.CustomScriptFunction</arg>
                  <arg name="class.name">com.onresolve.jira.groovy.GroovyFunctionPlugin</arg>
                </function>
              </post-functions>
            </unconditional-result>
          </results>
        </action>
        <action id="31" name="Analysis NOT PASSED">
          <meta name="jira.description" />
          <meta name="jira.fieldscreen.id" />
          <results>
            <unconditional-result old-status="žée" status="žée" step="8">
              <post-functions>
                <function type="class">
                  <arg name="field.copyFieldSource1" />
                  <arg name="textValue">10104</arg>
                  <arg name="scopeSource-linkEnd" />
                  <arg name="maxAllowed-integerValue" />
                  <arg name="workflowName-textValue">EC HUB: Epic Tracking Workflow</arg>
                  <arg name="performTransitionAsUser-user" />
                  <arg name="scopeType">ò</arg>
                  <arg name="destination-scopeTarget">ò</arg>
                  <arg name="full.module.key">com.googlecode.jira-suite-utilitieslinkedtransition-function</arg>
                  <arg name="scopeDestination-linkEnd" />
                  <arg name="jsuWorkflowParamsVersion-textValue">2.25.0</arg>
                  <arg name="preconditionAwareFunctionMode-textValue">ALWAYS</arg>
                  <arg name="source-scopeTarget">ISSUE_IN_TRANSITION</arg>
                  <arg name="{^êÕj[">11</arg>
                  <arg name="scopeDestination-jql" />
                  <arg name="class.name">ch.beecom.jira.jsu.workflow.function.linkedtransition.LinkedTransitionFunction</arg>
                  <arg name="scopeSource-jql" />
                  <arg name="status" />
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.UpdateIssueStatusFunction</arg>
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.misc.CreateCommentFunction</arg>
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.GenerateChangeHistoryFunction</arg>
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.IssueReindexFunction</arg>
                </function>
                <function type="class">
                  <arg name="eventTypeId">13</arg>
                  <arg name="class.name">com.atlassian.jira.workflow.function.event.FireIssueEventFunction</arg>
                </function>
              </post-functions>
            </unconditional-result>
          </results>
        </action>
      </actions>
    </step>
    <step id="4" name="Backlog">
      <meta name="jira.status.id">11327</meta>
      <actions>
        <action id="41" name="Start Working">
          <meta name="jira.description" />
          <meta name="jira.fieldscreen.id" />
          <results>
            <unconditional-result old-status="žée" status="žée" step="5">
              <post-functions>
                <function type="class">
                  <arg name="scopeSource-linkEnd" />
                  <arg name="append.value" />
                  <arg name="maxAllowed-integerValue" />
                  <arg name="runAsUser-user" />
                  <arg name="field.value">%%CURRENT_DATETIME%%</arg>
                  <arg name="field.name">customfield_12849</arg>
                  <arg name="scopeType">H</arg>
                  <arg name="destination-scopeTarget">ISSUE_IN_TRANSITION</arg>
                  <arg name="full.module.key">com.googlecode.jira-suite-utilitiesupdateIssueCustomField-function</arg>
                  <arg name="scopeDestination-linkEnd" />
                  <arg name="preconditionAwareFunctionMode-textValue">ALWAYS</arg>
                  <arg name="jsuWorkflowParamsVersion-textValue">2.25.0</arg>
                  <arg name="source-scopeTarget">ISSUE_IN_TRANSITION</arg>
                  <arg name="scopeDestination-jql" />
                  <arg name="class.name">com.googlecode.jsu.workflow.function.UpdateIssueCustomFieldPostFunction</arg>
                  <arg name="scopeSource-jql" />
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.UpdateIssueStatusFunction</arg>
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.misc.CreateCommentFunction</arg>
                </function>
                <function type="class">
                  <arg name="FIELD_FUNCTION_ID">85ddf36a-c289-4342-9464-5bd682a4f0a5</arg>
                  <arg name="FIELD_NOTES">Move to "To Do" the first activity</arg>
                  <arg name="FIELD_SCRIPT_FILE_OR_SCRIPT">{"script":"import com.atlassian.jira.component.ComponentAccessor;\nimport com.atlassian.jira.issue.Issue;\nimport com.atlassian.jira.bc.issue.IssueService;\nimport com.atlassian.jira.issue.IssueInputParametersImpl;\nimport org.apache.log4j.Logger;\nimport org.apache.log4j.Level;\nimport com.atlassian.jira.component.ComponentAccessor;\nimport com.atlassian.jira.event.issue.IssueEventBundle;\nimport com.atlassian.jira.event.issue.IssueEventManager;\nimport com.atlassian.jira.event.issue.IssueEventBundleFactory;\nimport com.atlassian.jira.event.issue.IssueEvent;\nimport com.opensymphony.workflow.WorkflowContext\nimport com.atlassian.jira.workflow.WorkflowTransitionUtil;\nimport com.atlassian.jira.workflow.WorkflowTransitionUtilImpl;\nimport com.atlassian.jira.util.JiraUtils;\nimport com.opensymphony.workflow.loader.StepDescriptor;\nimport com.atlassian.jira.*;\nimport com.atlassian.jira.workflow.WorkflowManager;\nimport com.atlassian.jira.workflow.JiraWorkflow;\nimport com.opensymphony.workflow.loader.ActionDescriptor;\nimport com.atlassian.jira.issue.MutableIssue\nimport com.atlassian.jira.issue.link.IssueLink\n\nlog.level = Level.DEBUG\n\nClass objectFacadeClass = ComponentAccessor.getPluginAccessor().getClassLoader().findClass(\"com.riadalabs.jira.plugins.insight.channel.external.api.facade.ObjectFacade\")\ndef objectFacade = ComponentAccessor.getOSGiComponentInstanceOfType(objectFacadeClass)\nClass iqlFacadeClass = ComponentAccessor.getPluginAccessor().getClassLoader().findClass(\"com.riadalabs.jira.plugins.insight.channel.external.api.facade.IQLFacade\")\ndef iqlFacade = ComponentAccessor.getOSGiComponentInstanceOfType(iqlFacadeClass)\ndef customFieldManager = ComponentAccessor.getCustomFieldManager()\ndef subTaskManager = ComponentAccessor.getSubTaskManager()\ndef issueManager = ComponentAccessor.getIssueManager()\ndef issueEventManager = ComponentAccessor.getIssueEventManager()\ndef user = ComponentAccessor.getJiraAuthenticationContext().getLoggedInUser()\n//Issue issue = issueManager.getIssueObject('EC-9838')\n\n//ID of \"HUB Engineering Cell\" Insight Schema\nint schemaId = 30\n\ndef subTaskIssueLinks = issue.getSubTaskObjects()\ndef ecNumber = customFieldManager.getCustomFieldObjectsByName(\"EC Number\")[0]\ndef minIndex=0\ndef issueToTransition = new ArrayList()\ndef toBeFinishedBefore = null, canBeMoved=true\ndef issueToBeCompleted = new ArrayList()\n\ndef objects = iqlFacade.findObjectsByIQLAndSchema(schemaId, \"objectType=Activities ORDER BY INDEX ASC\");\nif (objects != null &amp;&amp; objects.size() &gt; 0){\n    for(act in objects){\n        def actIndex = objectFacade.loadObjectAttributeBean(act.getId(), \"INDEX\") ? objectFacade.loadObjectAttributeBean(act.getId(), \"INDEX\").getObjectAttributeValueBeans() : null;\n\t\tactIndex = actIndex.value[0]\n        if(minIndex==0 &amp;&amp; actIndex&gt;minIndex){\n            minIndex=actIndex\n        }\n        act = act.toString().substring(0,act.toString().lastIndexOf('(')-1)\n        \n        for(st in subTaskIssueLinks){\n            def currentSubTaskSummary = ComponentAccessor.getIssueManager().getIssueByCurrentKey(st.toString()).getSummary()\n            if(actIndex==minIndex &amp;&amp; currentSubTaskSummary.equals(issue.getCustomFieldValue(ecNumber).toString() + \" - \" + act)){\n                \n                def summary = st.summary.substring(11)\n                def actObj = iqlFacade.findObjectsByIQLAndSchema(schemaId, \"objectType=Activities AND Name = \\\"\" + summary + \"\\\"\");\n\n                if (actObj != null &amp;&amp; actObj.size() &gt; 0){\n                    toBeFinishedBefore = objectFacade.loadObjectAttributeBean(actObj[0].getId(), \"TO_BE_FINISHED_TO_BE_STARTED\") ? objectFacade.loadObjectAttributeBean(actObj[0].getId(), \"TO_BE_FINISHED_TO_BE_STARTED\").getObjectAttributeValueBeans() : null;\n                }\n                for (i in toBeFinishedBefore){\n                    def actObjToBeFinished = iqlFacade.findObjectsByIQLAndSchema(schemaId, \"objectType=Activities AND Key = \\\"\" +\"HUBEC-\" + i.value + \"\\\"\");\n                    \n                    for(subt in subTaskIssueLinks){\n                        def currentSubTSummary = ComponentAccessor.getIssueManager().getIssueByCurrentKey(subt.toString()).getSummary()\n            \t\t\tif(currentSubTSummary!=issue.summary &amp;&amp; currentSubTSummary.equals(parentIssue.getCustomFieldValue(ecNumber).toString() + \" - \" + actObjToBeFinished[0].toString().substring(0,actObjToBeFinished[0].toString().lastIndexOf('(')-1))){\n                            if(subt.status.name!=\"Done\"){\n                                log.debug \"l'attivit\u00e0 non pu\u00f2 partire perch\u00e8 almeno una di quelle da chiudere prima \" + currentSubTSummary + \" non \u00e8 completata\"\n                                canBeMoved=false\n                            }\n                        }\n                    }\n                }                \n                if(canBeMoved){\n                    issueToTransition.add(st)\n                }\n            }\n        }\n    }\n}\n\nlog.debug \"Issue to be moved: \" + issueToTransition\n\n\nint EVENT_ID = 51\nif(issueToTransition){\n\tWorkflowTransitionUtil workflowTransitionUtil = ( WorkflowTransitionUtil ) JiraUtils.loadComponent( WorkflowTransitionUtilImpl.class );\n    for(currIssue in issueToTransition){\n        MutableIssue mi = issueManager.getIssueObject(currIssue.toString());\n        if(mi.status.name==\"Open\"){\n            workflowTransitionUtil.setIssue(mi);\n            workflowTransitionUtil.setAction(EVENT_ID);\n            workflowTransitionUtil.validate();\n            workflowTransitionUtil.progress();                          \n        }\n    }\n}\n\nEVENT_ID = 61\nif(issueToTransition){\n\tWorkflowTransitionUtil workflowTransitionUtil = ( WorkflowTransitionUtil ) JiraUtils.loadComponent( WorkflowTransitionUtilImpl.class );\n    for(currIssue in issueToTransition){\n        MutableIssue mi = issueManager.getIssueObject(currIssue.toString());\n        if(mi.status.name==\"Done\"){\n            workflowTransitionUtil.setIssue(mi);\n            workflowTransitionUtil.setAction(EVENT_ID);\n            workflowTransitionUtil.validate();\n            workflowTransitionUtil.progress();                          \n        }\n    }\n}","scriptPath":null}</arg>
                  <arg name="full.module.key">com.onresolve.jira.groovy.groovyrunnerscriptrunner-workflow-function-com.onresolve.scriptrunner.canned.jira.workflow.postfunctions.CustomScriptFunction</arg>
                  <arg name="canned-script">com.onresolve.scriptrunner.canned.jira.workflow.postfunctions.CustomScriptFunction</arg>
                  <arg name="class.name">com.onresolve.jira.groovy.GroovyFunctionPlugin</arg>
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.GenerateChangeHistoryFunction</arg>
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.IssueReindexFunction</arg>
                </function>
                <function type="class">
                  <arg name="eventTypeId">13</arg>
                  <arg name="class.name">com.atlassian.jira.workflow.function.event.FireIssueEventFunction</arg>
                </function>
              </post-functions>
            </unconditional-result>
          </results>
        </action>
      </actions>
    </step>
    <step id="5" name="Doing">
      <meta name="jira.status.id">14631</meta>
      <actions>
<common-action id="51" />
        <action id="61" name="Phase In/Out">
          <meta name="jira.description" />
          <meta name="jira.fieldscreen.id" />
          <results>
            <unconditional-result old-status="žée" status="žée" step="6">
              <post-functions>
                <function type="class">
                  <arg name="scopeSource-linkEnd" />
                  <arg name="append.value" />
                  <arg name="maxAllowed-integerValue" />
                  <arg name="runAsUser-user" />
                  <arg name="field.value">%%CURRENT_DATETIME%%</arg>
                  <arg name="field.name">customfield_12850</arg>
                  <arg name="scopeType">H</arg>
                  <arg name="destination-scopeTarget">ISSUE_IN_TRANSITION</arg>
                  <arg name="full.module.key">com.googlecode.jira-suite-utilitiesupdateIssueCustomField-function</arg>
                  <arg name="scopeDestination-linkEnd" />
                  <arg name="preconditionAwareFunctionMode-textValue">ALWAYS</arg>
                  <arg name="jsuWorkflowParamsVersion-textValue">2.25.0</arg>
                  <arg name="source-scopeTarget">ISSUE_IN_TRANSITION</arg>
                  <arg name="scopeDestination-jql" />
                  <arg name="class.name">com.googlecode.jsu.workflow.function.UpdateIssueCustomFieldPostFunction</arg>
                  <arg name="scopeSource-jql" />
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.UpdateIssueStatusFunction</arg>
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.misc.CreateCommentFunction</arg>
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.GenerateChangeHistoryFunction</arg>
                </function>
                <function type="class">
                  <arg name="class.name">com.atlassian.jira.workflow.function.issue.IssueReindexFunction</arg>
                </function>
                <function type="class">
                  <arg name="eventTypeId">13</arg>
                  <arg name="class.name">com.atlassian.jira.workflow.function.event.FireIssueEventFunction</arg>
                </function>
              </post-functions>
            </unconditional-result>
          </results>
        </action>
      </actions>
    </step>
    <step id="6" name="Phase In/Out">
      <meta name="jira.status.id">14632</meta>
      <actions>
<common-action id="51" />
      </actions>
    </step>
    <step id="7" name="‰Þ">
      <meta name="jira.status.id">10007</meta>
    </step>
    <step id="8" name="Analysis Failed">
      <meta name="jira.status.id">14633</meta>
    </step>
  </steps>
</workflow>